generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model campaign {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  start_date DateTime @db.Date
  end_date   DateTime @db.Date
  creator_id String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  creator    creator? @relation(fields: [creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model collaborator {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  creator_id String?  @db.Uuid
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  creator    creator? @relation(fields: [creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model creator {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description          String?                @db.VarChar(255)
  image                String?                @db.VarChar(255)
  name                 String                 @db.VarChar(255)
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  user_id              String                 @db.Uuid
  tenant_id            String                 @db.VarChar(255)
  campaign             campaign[]
  collaborator         collaborator[]
  user                 user                   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  social_media_account social_media_account[]
  subscription         subscription[]
}

model social_media_account {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  platform_name String   @db.VarChar(255)
  account_name  String   @db.VarChar(255)
  creator_id    String?  @db.Uuid
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  creator       creator? @relation(fields: [creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model subscription {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  service_name      String   @db.VarChar(255)
  subscription_date DateTime @db.Date
  creator_id        String?  @db.Uuid
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @db.Timestamp(6)
  creator           creator? @relation(fields: [creator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  collaborator collaborator[]
  creator      creator[]
}
